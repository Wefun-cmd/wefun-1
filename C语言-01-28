#include<stdio.h>
#include<math.h>
#include<string.h>
int binary_search(int arr[], int k,int sz)
{
	int left = 0;
	int right = sz - 1;
	while (left <= right)
	{
		int mid = (left + right) / 2;
		if (k > arr[mid])
		{
			left = mid + 1;
		}
		else if (k < arr[mid])
		{
			right = mid - 1;
		}
		else
		{
			return mid;
		}
	}
	return -1;
}
int main()
{
	int k = 16;
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };//传递过去的是数组arr首元素的地址
	int sz = sizeof(arr)/sizeof(arr[0]);
	int ret = binary_search(arr, k,sz);
	if (ret == -1)
	{
		printf("没找到\n");
	}
	else
	{
		printf("找到了，下标是:%d\n",ret);
	}
	return 0;
}
//int is_leap_year(int year)//函数代码具有可移植性，可复用性。
//{
//	if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))
//	{
//		return 1;
//	}
//	else
//	return 0;
//}
//int main()
//{
//	int year = 0;
//	int count = 0;
//	for (year = 1000; year <= 2000; year++)
//	{
//		if (is_leap_year(year) == 1)
//		{
//			printf("%d ", year);
//			count++;
//		}
//	}
//	printf("\ncount=%d", count);
//	return 0;
//}
// int is_prime(int n)
//{
//	 int m = 1;
//	 for (m = 2; m <=sqrt(n); m++)
//	 {
//		 if (n % m == 0)
//			 return 0;
//	 }
//	 return 1;
//}
//int main()
//{
//	int i = 0;
//	int ret = 0;
//	for (i = 100; i <= 200; i++)
//	{
//		if (is_prime(i) == 1)
//		{
//			printf("%d ", i);
//			ret++;
//		}
//	}
//	printf("\nret=%d", ret);
//	return 0;
//}
//void swap1(int x, int y)//有问题，函数参数中的x,y所对应的地址与实际输入数字的地址不相同，导致无法交换
//{
//	int tmp = 0;
//	tmp = x;
//	x = y;
//	y = tmp;
//}
//void swap2(int*pa,int*pb)//通过指针交换地址的方法远程操纵交换数值
//{
//	int tmp = 0;//当实参传递给形参的时候，形参是实参的一份临时拷贝，
//	            //对于形参的修改不会改变实参的值。
//	tmp = *pa;
//	*pa = *pb;
//	*pb = tmp;
//}
//int main()
//{
//	int a = 10; 
//	int b = 20;
//	printf("a=%d b=%d\n", a, b);
//	swap2(&a, &b);//调用swap2函数
//	printf("交换后，a=%d b=%d\n", a, b);
//	return 0;
//}

//int cmp(int x, int y)
//{
//	if (x > y)
//	{
//		return x;
//     }
//	else
//	{
//		return y;
//	}
//}
//int main()
//{
//	int ret = 0;
//	int a, b;
//	printf("请输入两个整数:");
//	scanf_s("%d %d", &a, &b);
//	ret = cmp(a, b);
//	printf("较大数是%d\n", ret);
//	return 0;
//}
//memset,设置内存
//int main()
//{
//	char arr[] = "hello world";
//	memset(arr, '*', 5);
//	printf("%s\n", arr);
//	return 0;
//}
