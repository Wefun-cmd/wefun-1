#define _CRT_SECRET_NO_WARNINGS 1
#include <stdio.h>
int main()
{//\t--水平制表符
	printf("c:\\test\\32\\test.c\n");// 用\\表示一个\，使其不再是转义字符里的\.
	printf("%c\n", '\'');
		return 0;
}
//int main()
//{
	//暴力求解
	/*int arr[] = { 1,2,3,4,5,5,7,1,2,3,4 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0; 
	for (i = 0; i < sz;i++)
	{int count = 0;
		int j = 0; 
		for (j = 0; j < sz; j++)
		{
			if (arr[i] == arr[j])
			{
				count++;
			}
		}
		if (count == 1) {			
			printf("单身狗是%d\n", arr[i]);
			break;
		}
	}*/

	//int arr[] = { 1, 2, 3, 4, 5, 4,5,7, 3, 2, 1 };
	//int i = 0;
	//int sum = 0;
	//int sz = sizeof(arr) / sizeof(arr[0]);
	//for (i = 0; i < sz; i++) {
	//	sum = sum ^ arr[i];
	//}
	//printf("单身狗是：%d", sum);//a^a=0;a^0=a;异或算法满足交换律,极大的减少运算次数

	/*int num1 = 10;
	int num2 = 20;
	if (num1 > num2) 
		printf("较大值是%d\n", num1);
	else
		printf("较大值是%d\n", num2);
return 0;*/

//	int Max(int x, int y)
//	{
//		if (x > y)
//			return x;
//		else
//			return y;
//	}
//	int main()
//	{
//		int num1 = 1;
//		int num2 = 20;
//		int max = 0;
//		max=Max(num1, num2);
//		printf("%d", max);
//		return 0;//构造函数解决（函数在主要代码块之外构造）
//}

//int main()
//{
//	/*char arr[] = "abc";
//	char arr1[] = { 'a','b','c',0 };
//	printf("%s\n", arr);
//	printf("%s\n", arr1);
//	return 0;*//strlen--string length--求字符串长度
//}
//{
//	char arr[] = "abc";
//	char arr1[] = { 'a','b','c' };
//	printf("%d\n", strlen(arr));
//	printf("%d\n", strlen(arr1));
//}
