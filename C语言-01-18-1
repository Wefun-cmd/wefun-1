Letcode-查找单身狗
#include<stdio.h>
int main()
{
	int arr[] = { 1,2,3,4,5,5,7,1,2,3,4 };
	int i = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);
	for (i = 0; i < sz; i++) {
		int count = 0;
		int j = 0;
		for (j = 0 ; j < sz; j++) {

			if (arr[i] == arr[j])
			{
				count++;
			}
		}

		if (count == 1)
		{
			printf("单身狗：%d\n", arr[i]);
			break;
		}
	}
	return 0;
}
//#define _CRT_SECRET_NO_WAINING
//#include<stdio.h>
//enum Color
//{
//	red,
//	yellow,
//	blue
//};
//int main()
//{
//	enum Color color = blue;
//	/*printf("%d\n", red);*/
//	return 0;
//}

//int main()
//{//枚举关键字-enum
//	enum sex；
//	{
//		MAIL,
//		FEMAIL,
//	    SECRET,
//	};//MAIL,FEMAIL,SECRET称为枚举常量
//	printf("%d\n", MAIL);
//    //const int num = 4;//const-常属性
//	//printf("%d\n", num);
//	//num = 8;
//	//printf("%d\n", num);//num是一个变量
//	return 0;
//}

C-01-18
//int main()
//{
//	/*int a = 3;
//	int b = 5;
//	int c = 0;
//	printf("交换前a=%d b=%d\n", a,b);
//	c = a;
//	a = b;
//	b = c;
//	printf("交换后a=%d b=%d\n", a, b);
//	return 0;*/使用第三个变量
//}

//int main()
//{
//	int a = 3;
//	int b = 5;
//	printf("交换前a=%d b=%d\n", a, b);
//	a = a + b;
//	b = a - b;
//	a = a - b;
//	printf("交换后a=%d b=%d", a, b);
//	return 0;
//

//}不使用第三个变量（有溢出风险）
//int main()
//{
//	int a = 3;
//	int b = 5;
//	printf("交换前a=%d b=%d\n", a, b);
//	a = a ^ b;
//	b = a ^ b;
//	a = a ^ b;//a^b-按位异或
//	printf("交换后a=%d b=%d", a, b);
//	return 0;
//}可读性差，执行效率也较差
